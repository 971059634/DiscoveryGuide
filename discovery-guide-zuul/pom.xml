<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <artifactId>discovery-guide-zuul</artifactId>
    <name>Nepxion Discovery Guide Zuul</name>
    <packaging>jar</packaging>
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.nepxion</groupId>
        <artifactId>discovery-guide</artifactId>
        <version>1.0.0</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>com.nepxion</groupId>
            <artifactId>discovery-plugin-starter-nacos</artifactId>
            <!-- <artifactId>discovery-plugin-starter-consul</artifactId> -->
            <!-- <artifactId>discovery-plugin-starter-eureka</artifactId> -->
            <version>${discovery.version}</version>
        </dependency>

        <dependency>
            <groupId>com.nepxion</groupId>
            <artifactId>discovery-plugin-config-center-starter-nacos</artifactId>
            <!-- <artifactId>discovery-plugin-config-center-starter-apollo</artifactId> -->
            <version>${discovery.version}</version>
        </dependency>

        <dependency>
            <groupId>com.nepxion</groupId>
            <artifactId>discovery-plugin-strategy-starter-zuul</artifactId>
            <version>${discovery.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                    <mainClass>${MainClass}</mainClass>
                    <!-- <mainClass>com.nepxion.discovery.guide.zuul.DiscoveryGuideZuul</mainClass> -->
                    <layout>JAR</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <attach>false</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <imageName>${ImageName}</imageName>
                    <baseImage>openjdk:8-jre-alpine</baseImage>
                    <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                    <exposes>
                        <expose>${ExposePort}</expose>
                    </exposes>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- 指定.git文件夹路径。缺失则默认为${project.basedir}/.git -->
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <!-- 指定git信息文件是否生成。缺失则默认为false -->
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <!-- 指定git信息文件的输出路径 -->
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.json</generateGitPropertiesFilename>
                    <!-- <generateGitPropertiesFilename>${project.basedir}/git.json</generateGitPropertiesFilename> -->
                    <!-- 指定git信息文件的输出格式。缺失则默认为properties -->
                    <format>json</format>
                    <!-- 指定当.git文件夹未找到时，构建是否失败。若设置true，则构建失败，若设置false，则跳过执行该构建步骤。缺失则默认为true -->
                    <failOnNoGitDirectory>true</failOnNoGitDirectory>
                    <!-- 指定当项目打包类型为pom时，是否取消构建。缺失则默认为true -->
                    <skipPoms>false</skipPoms>
                    <!-- 指定构建过程中，是否打印详细信息。缺失则默认为false -->
                    <verbose>false</verbose>
                    <!-- 指定日期格式 -->
                    <dateFormat>yyyy-MM-dd HH:mm:ss.SSS</dateFormat>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.json</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.json</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>